{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","rpta","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,uBAAMC,SARa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,GAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,QAI1C,UACE,uBAAOC,KAAK,OAAOC,MAAOT,EAAYU,SAbhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,UAarB,iD,QClBOG,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEjC,OACI,sBAAKC,UAAU,2CAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNFK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdN,EADc,iDAEwBO,UAAUF,GAFlC,+DAGDG,MAAMR,GAHL,cAGdS,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAKc,EAAIE,OAAOC,iBAAiBjB,QAVjB,kBAcbY,GAda,4CAAH,sDCIRM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAEtB,ECJwB,SAACA,GAC3B,MAA0BpB,mBAAS,CAAE0B,KAAM,GAAIQ,SAAS,IAAxD,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OAXAC,qBAAU,WAIRlB,EAAQC,GAAUkB,MAAK,SAACC,GAAD,OAAUH,EAAS,CAAEV,KAAMa,EAAML,SAAS,SAChE,CAACd,IAMGe,EDV4BK,CAAcpB,GAAlCW,EAAb,EAAQL,KAAaQ,EAArB,EAAqBA,QAIvB,OACE,qCACE,qBAAIlB,UAAU,oCAAd,cAAoDI,EAApD,OACEc,GAAW,mBAAGlB,UAAU,mCAAb,yBACb,qBAAKA,UAAU,YAAf,SACGe,EAAOH,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEdnBW,EAAe,WAIxB,MAAoCzC,mBAAS,CAAC,aAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAQA,OACI,gCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAkBA,IAE/B,6BACE2C,EAAWd,KAAI,SAACR,GAAD,OACb,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YClB9BuB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6caa55bb.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategorias((cats) => [inputValue, ...cats]);\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n      <h2>AddCategory</h2>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategorias: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n export const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=jZUo70fUVWIX0x6EwEzMJcKuvDjV5g7I`;\r\n    const rpta = await fetch(url);\r\n    const { data } = await rpta.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  };","// import { useState, useEffect } from \"react\";\r\n// import { getGifs } from \"../helpers/getGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  // const [images, setimages] = useState([]);\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n     \r\n  \r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\"> {category} </h3>\r\n      { loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}      \r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({ data: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    //getGifs(category).then((imgs) => setimages(imgs));\r\n    //getGifs(category).then(setimages)\r\n\r\n    getGifs(category).then((imgs) => setstate({ data: imgs, loading: false }));\r\n  }, [category]);\r\n\r\n  // setTimeout(() => {\r\n  //   setstate({ data: [], cargando: false });\r\n  // }, 3000);\r\n\r\n  return state;\r\n};\r\n","import { useState } from \"react\"\r\nimport { AddCategory } from \"./components/AddCategory\"\r\nimport { GifGrid } from \"./components/GifGrid\"\r\nexport const GifExpertApp = () => {\r\n\r\n    \r\n\r\n    const [categorias, setCategorias] = useState([\"Robotech\"])\r\n\r\n    // const agregarItem =(e) => {\r\n    //     //setCategorias([...categorias, \"La gata Loca\"])\r\n\r\n    //     setCategorias( cats => [...cats, \"La Gata Loca\"])\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp</h2>            \r\n            <hr/>\r\n            <AddCategory setCategorias = { setCategorias }/>\r\n        \r\n            <ul>\r\n            { categorias.map((category) => (\r\n                <GifGrid key={category} category={category}/>\r\n            ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from \"./GifExpertApp\"\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}